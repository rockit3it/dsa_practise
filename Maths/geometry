Check If two Line segments Intersect
here we use the concept of checking orientation of both the points with respect to a line for a intersecting line let's take the points are x1,y1,x2,y2,x3,y3,x4,y4
and x1,y1 and x2,y2 are two points of a line then point x3,y3 shold be in the one side of a line and x4,y4 should another side so there will be intersection between two lines with one corner case
if both the line coinsides with each other and point 3 or point 4 are on the line or both point on the line so there are mutiple intersection points of line
code:
class Solution {
    public int orientation(int p[], int q[], int r[]){
        long x1 = p[0], x2 = q[0], x3 = r[0];
        long y1 = p[1], y2 = q[1], y3 = r[1];
        long val = (long)((long)((y2-y1)*(x3-x2)) - (long)((y3-y2)*(x2-x1)));
        if(val == 0){
            return 0;
        }
        return val > 0 ? 1 : 2; //1 for clockwise and 2 for anti clockwise or 1 for right side and 2 for left side
    }
    public boolean onseg(int x1, int y1, int x2, int y2, int x3, int y3){
        return x3 <= Math.max(x1, x2) && x3 >= Math.min(x1, x2) && y3 <= Math.max(y1, y2) && y3 >= Math.min(y1, y2);
    }
    String doIntersect(int p1[], int q1[], int p2[], int q2[]) {
        // code here
        long p1q1p2 = orientation(p1, q1, p2);
        long p1q1q2 = orientation(p1, q1, q2);
        long p2q2p1 = orientation(p2, q2, p1);
        long p2q2q1 = orientation(p2, q2, q1);
        if(p1q1p2 != p1q1q2 && p2q2p1 != p2q2q1){
            return "true";
        }
        else if(p1q1p2 == 0 && onseg(p1[0], p1[1], q1[0], q1[1], p2[0], p2[1])) return "true";
        else if(p1q1q2 == 0 && onseg(p1[0], p1[1], q1[0], q1[1], q2[0], q2[1])) return "true";
        else if(p1q1p2 == 0 && onseg(p2[0], p2[1], q2[0], q2[1], p1[0], p1[1])) return "true";
        else if(p1q1p2 == 0 && onseg(p2[0], p2[1], q2[0], q2[1], q1[0], q1[1])) return "true";
        return "false";
    }
}
